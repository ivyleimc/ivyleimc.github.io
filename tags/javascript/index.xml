<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on IvyLei - blog</title>
    <link>http://localhost:1313/tags/javascript/</link>
    <description>Recent content in JavaScript on IvyLei - blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 11 Nov 2020 22:00:24 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fontend Encoding</title>
      <link>http://localhost:1313/post/fontend-encoding/</link>
      <pubDate>Wed, 11 Nov 2020 22:00:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/fontend-encoding/</guid>
      <description>window.btoa() window.atob()
  encodeURI() decodeURI()
  encodeURIComponent() decodeURIComponent()
  </description>
    </item>
    
    <item>
      <title>ES6</title>
      <link>http://localhost:1313/post/es6/</link>
      <pubDate>Tue, 01 Sep 2020 20:55:36 +0800</pubDate>
      
      <guid>http://localhost:1313/post/es6/</guid>
      <description>对象字面量的扩展 🌰，栗子 1 2 3 4 5 6 7 8 9 10 11 12 const x = 1, y = 2; //对象字面量 const obj = { x: x, y: y, fn: function afn() { console.log(afn.hasOwnProperty(&amp;#39;prototype&amp;#39;)); } } console.log(obj.x); console.log(obj.y); console.log(obj.fn()); 简洁属性 1 2 3 4 5 6 7 8 const x</description>
    </item>
    
    <item>
      <title>JS</title>
      <link>http://localhost:1313/post/js/</link>
      <pubDate>Sun, 23 Aug 2020 17:23:17 +0800</pubDate>
      
      <guid>http://localhost:1313/post/js/</guid>
      <description>变量类型 值类型和引用类型 值类型 1 2 3 4 5 let a = 100; let b = a; a = 200; console.log(b); //100 栈 栈 栈 key value key value key value a 100 a 100 a 200 b 100 b 100 引用类型 1 2 3 4 5 let object111 = {num: 20}; let object222 = aaaa;</description>
    </item>
    
    <item>
      <title>[Issue] this 箭头函数</title>
      <link>http://localhost:1313/post/issue_this_arrowfunctionexpression/</link>
      <pubDate>Wed, 10 Jun 2020 21:48:58 +0800</pubDate>
      
      <guid>http://localhost:1313/post/issue_this_arrowfunctionexpression/</guid>
      <description>出现问题 1 2 &amp;lt;div class=&amp;#34;cl&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;cl&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; 1 2 3 $(&amp;#39;.cl&amp;#39;).bind(&amp;#39;click&amp;#39;, () =&amp;gt; { console.log($(this)); // ??? 打印出来的不是我点击的对象 }); 愣在那里一会才想起来好像箭头函数会影响 this 的指向 现在想起都觉得自己当时傻 -.-!</description>
    </item>
    
    <item>
      <title>Prototype</title>
      <link>http://localhost:1313/post/js_prototype/</link>
      <pubDate>Tue, 21 Apr 2020 06:36:46 +0800</pubDate>
      
      <guid>http://localhost:1313/post/js_prototype/</guid>
      <description>1. 原型链 所有对象都有 [[Prototype]] 内置属性，它指向另一个对象，另一个对象也有，一直到 Object.prototype 为至，这便是原型链 1.1 instanceof 所有函数都有 prototype 属性，用 new 函数调用得到一个对象</description>
    </item>
    
  </channel>
</rss>